services:
  # WebサービスとしてのAPIサービス
  - type: web
    name: video-processing-api
    env: node
    nodeVersion: 18
    plan: pro
    buildCommand: npm install && npx prisma generate --schema=./prisma/schema.prisma && npx prisma db push --schema=./prisma/schema.prisma --accept-data-loss
    startCommand: node src/server.js
    rootDir: .
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "10000"
      - key: DATABASE_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: DIRECT_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: REDIS_URL
        fromService:
          type: redis
          name: video-processing-queue
          property: connectionString
      - key: R2_ENDPOINT
        sync: false
      - key: R2_ACCESS_KEY_ID
        sync: false
      - key: R2_SECRET_ACCESS_KEY
        sync: false
      - key: R2_BUCKET_NAME
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: OPENROUTER_API_KEY
        sync: false
      - key: ALLOWED_ORIGINS
        value: "https://video-processing-frontend.onrender.com,https://vpm.ririaru-stg.cloud"
      - key: SKIP_TYPE_CHECK
        value: true
    healthCheckPath: /api/healthcheck

  # フロントエンドアプリケーション（完全に新しい名前で作成）
  - type: web
    name: video-processing-frontend
    env: node
    nodeVersion: 18
    plan: standard
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    rootDir: .
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "3000"
      - key: DATABASE_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: DIRECT_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: NEXTAUTH_URL
        value: "https://video-processing-frontend.onrender.com"
      - key: NEXTAUTH_SECRET
        sync: false
      - key: NEXT_PUBLIC_API_URL
        value: "https://video-processing-api.onrender.com"
      - key: R2_ENDPOINT
        sync: false
      - key: R2_ACCESS_KEY_ID
        sync: false
      - key: R2_SECRET_ACCESS_KEY
        sync: false
      - key: R2_BUCKET_NAME
        sync: false
      - key: ALLOWED_ORIGINS
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: GEMINI_MODEL
        sync: false
      - key: OPENROUTER_API_KEY
        sync: false
      - key: REDIS_URL
        sync: false

  # バックグラウンドワーカー（文字起こし処理）
  - type: worker
    name: transcription-worker
    env: node
    nodeVersion: 18.x
    plan: pro
    buildCommand: npm install && npx prisma generate --schema=./prisma/schema.prisma && npx prisma db push --schema=./prisma/schema.prisma --accept-data-loss
    startCommand: npm run start:transcription
    rootDir: .
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: DIRECT_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: REDIS_URL
        fromService:
          type: redis
          name: video-processing-queue
          property: connectionString
      - key: R2_ENDPOINT
        sync: false
      - key: R2_ACCESS_KEY_ID
        sync: false
      - key: R2_SECRET_ACCESS_KEY
        sync: false
      - key: R2_BUCKET_NAME
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: WORKER_TYPE
        value: transcription

  # 要約ワーカー
  - type: worker
    name: summary-worker
    env: node
    nodeVersion: 18.x
    plan: standard
    buildCommand: npm install && npx prisma generate --schema=./prisma/schema.prisma && npx prisma db push --schema=./prisma/schema.prisma --accept-data-loss
    startCommand: npm run start:summary
    rootDir: .
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: DIRECT_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: REDIS_URL
        fromService:
          type: redis
          name: video-processing-queue
          property: connectionString
      - key: GEMINI_API_KEY
        sync: false
      - key: WORKER_TYPE
        value: summary

  # 記事生成ワーカー
  - type: worker
    name: article-worker
    env: node
    nodeVersion: 18.x
    plan: standard
    buildCommand: npm install && npx prisma generate --schema=./prisma/schema.prisma && npx prisma db push --schema=./prisma/schema.prisma --accept-data-loss
    startCommand: npm run start:article
    rootDir: .
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: DIRECT_URL
        value: "postgresql://wado_wado_user:U5YqVgZ8xL4OaqGGybLqdJOs4ZwSIWqG@dpg-cve55ldrie7s73e158c0-a/wado_wado"
      - key: REDIS_URL
        fromService:
          type: redis
          name: video-processing-queue
          property: connectionString
      - key: OPENROUTER_API_KEY
        sync: false
      - key: WORKER_TYPE
        value: article

  # Redisキュー
  - type: redis
    name: video-processing-queue
    plan: standard
    ipAllowList:
      - source: 0.0.0.0/0  # すべてのIPアドレスを許可
        description: allow-all-ips
